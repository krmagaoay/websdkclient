{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","App","sdkKey","meetingNumber","URLSearchParams","window","location","search","get","leaveUrl","userName","passWord","className","onClick","e","preventDefault","fetch","method","headers","body","JSON","stringify","role","then","res","json","response","signature","document","getElementById","style","display","init","success","console","log","join","userEmail","tk","error","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0PAKAA,UAAQC,aAAa,mCAAoC,OAEzDD,UAAQE,cACRF,UAAQG,gBAERH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,SA+ELC,MA7Ef,WAGE,IAEIC,EAAS,uCACTC,EAAgB,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,iBAEhEC,EAAW,kBACXC,EAAW,SAEXC,EAAW,IAAIP,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,YAuD/D,OACE,qBAAKI,UAAU,MAAf,SACE,iCACE,+DAEA,wBAAQC,QAtDd,SAAsBC,GACpBA,EAAEC,iBAEFC,MAjBsB,mCAiBG,CACvBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBlB,cAAeA,EACfmB,KAlBK,MAoBNC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAClBF,MAAK,SAAAG,GAOR,IAAsBC,IANLD,EAASC,UAOxBC,SAASC,eAAe,cAAcC,MAAMC,QAAU,QAEtDrC,UAAQsC,KAAK,CACXvB,SAAUA,EACVwB,QAAS,SAACA,GACRC,QAAQC,IAAIF,GAEZvC,UAAQ0C,KAAK,CACXT,UAAWA,EACXxB,cAAeA,EACfO,SAAUA,EACVR,OAAQA,EACRmC,UAtCQ,GAuCR1B,SAAUA,EACV2B,GAnCc,GAoCdL,QAAS,SAACA,GACRC,QAAQC,IAAIF,IAEdM,MAAO,SAACA,GACNL,QAAQC,IAAII,OAKlBA,MAAO,SAACA,GACNL,QAAQC,IAAII,SA/BbC,OAAM,SAAAD,GACPL,QAAQK,MAAMA,OAwCZ,gCCxEOE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,SAM1BY,M","file":"static/js/main.631e7bd1.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\nimport { ZoomMtg } from '@zoomus/websdk';\n\nZoomMtg.setZoomJSLib('https://source.zoom.us/2.4.0/lib', '/av');\n\nZoomMtg.preLoadWasm();\nZoomMtg.prepareWebSDK();\n// loads language files, also passes any error messages to the ui\nZoomMtg.i18n.load('en-US');\nZoomMtg.i18n.reload('en-US');\n\nfunction App() {\n\n  // setup your signature endpoint here: https://github.com/zoom/meetingsdk-sample-signature-node.js\n  var signatureEndpoint = 'https://websdk210.herokuapp.com/'\n  // This Sample App has been updated to use SDK App type credentials https://marketplace.zoom.us/docs/guides/build/sdk-app\n  var sdkKey = 'PfPapLCavJc2ZBjMkssNeqboLdBOpoAEXQTc'\n  var meetingNumber = new URLSearchParams(window.location.search).get('meetingnumber')\n  var role = 0\n  var leaveUrl = 'https://zoom.us'\n  var userName = 'CV 240'\n  var userEmail = ''\n  var passWord = new URLSearchParams(window.location.search).get('passcode')\n  // pass in the registrant's token if your meeting or webinar requires registration. More info here:\n  // Meetings: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/meetings#join-registered\n  // Webinars: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/webinars#join-registered\n  var registrantToken = ''\n\n  function getSignature(e) {\n    e.preventDefault();\n\n    fetch(signatureEndpoint, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        meetingNumber: meetingNumber,\n        role: role\n      })\n    }).then(res => res.json())\n    .then(response => {\n      startMeeting(response.signature)\n    }).catch(error => {\n      console.error(error)\n    })\n  }\n\n  function startMeeting(signature) {\n    document.getElementById('zmmtg-root').style.display = 'block'\n\n    ZoomMtg.init({\n      leaveUrl: leaveUrl,\n      success: (success) => {\n        console.log(success)\n\n        ZoomMtg.join({\n          signature: signature,\n          meetingNumber: meetingNumber,\n          userName: userName,\n          sdkKey: sdkKey,\n          userEmail: userEmail,\n          passWord: passWord,\n          tk: registrantToken,\n          success: (success) => {\n            console.log(success)\n          },\n          error: (error) => {\n            console.log(error)\n          }\n        })\n\n      },\n      error: (error) => {\n        console.log(error)\n      }\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <main>\n        <h1>Zoom Meeting SDK Sample React</h1>\n\n        <button onClick={getSignature}>Join Meeting</button>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}